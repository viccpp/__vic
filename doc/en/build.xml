<p>To build the library you need one of supported C++ compilers and
<link href="https://www.gnu.org/software/make">GNU Make</link> utility version
3.82 or higher available in your command line environment (cmd).</p>

<p>Currently supported compilers are:</p>
<list style="bulleted">
    <item>GNU C++ v 4.7+ (MinGW) [<tt>gcc</tt>]</item>
    <item>Clang v 5+ with MinGW [<tt>clang</tt>]</item>
    <item>Clang v 5+ with Visual C++ [<tt>clang-cl</tt>]</item>
    <item>Visual C++ v 15.8+ (Visual Studio 2017) [<tt>msvc</tt>]</item>
    <item>Visual C++ v 7.1+ (Visual Studio 2003) [<tt>msvc</tt>] is supported
          but you may need to edit makefiles because of unsupported compiler
          options</item>
</list>

<p>Go to <tt>src</tt> subdirectory and write:</p>
<tty>
C:\> gmake
</tty>
<p>The library file will be built for you.</p>

<p>C++17 is used by default but you can choose another language standard
version using <tt>std</tt> option. E.g. to build the library in C++98 mode
write:</p>
<tty>
C:\> gmake std=98
</tty>

<p>Available values include: 98, 11, 14, 17, 20 and 23.</p>

<p>Also you can choose the used compiler manually:</p>
<tty>
C:\> gmake compiler=gcc
</tty>

<p>Alternatively NMAKE utility can be used with Visual C++ and clang-cl instead
of gmake:</p>
<tty>
C:\> nmake -f Makefile.nmake compiler=msvc
</tty>

<p>Finally, to use the library you just need to copy the library file and
contents of <tt>include</tt> subdirectory to some place where compiler/linker
can find it.</p>
